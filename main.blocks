<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id="q~LYE-pS+WAOZk)/wjK^" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="E]$li/7J.i%4WB62Q,fG"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace 拡張基板02 {" line1="    " line2="    /** " line3="     * LEDブロック" line4="     */" line5="    //% blockId=LED_PWM" line6="    //% block=&quot;%pin | のLEDの明るさを | %Value |％で点灯&quot;" line7="    //% weight=80 blockGap=8" line8="    //% Value.min=0 Value.max=100 Value.defl=100" line9="    //% group=&quot;LED&quot; pin.defl=AnalogPin.P0" line10="    export function LED_PWM(pin: AnalogPin,Value: number): void {" line11="        let val = (Value * 1023) / 100;" line12="        pins.analogWritePin(pin, val)" line13="    }" line14="" line15="    //% blockId=LED_OFF" line16="    //% block=&quot;%pin | のLEDをオフにする&quot;" line17="    //% weight=80 blockGap=8e" line18="    //% group=&quot;LED&quot; pin.defl=DigitalPin.P0" line19="    export function LED_OFF(pin: DigitalPin): void {" line20="        pins.digitalWritePin(pin, 0)" line21="    }" line22="" line23="    /**" line24="     * モータ" line25="     */" line26="    //% blockId=Mortor_ON" line27="    //% block=&quot;%pin | のモータを回す&quot;" line28="    //% weight=80 blockGap=8" line29="    //% group=&quot;モータ&quot; pin.defl=DigitalPin.P0" line30="    export function Motor_ON(pin: DigitalPin): void {" line31="        pins.digitalWritePin(pin, 1)" line32="    }" line33="    //% blockId=Mortor_OFF" line34="    //% block=&quot;%pin | のモータを停止&quot;" line35="    //% weight=80 blockGap=8" line36="    //% group=&quot;モータ&quot; pin.defl=DigitalPin.P0" line37="    export function Motor_OFF(pin: DigitalPin): void {" line38="        pins.digitalWritePin(pin, 0)" line39="    }" line40="" line41="    /**" line42="     * 照度センサ" line43="     */" line44="    //% blockId=Brightness block=&quot;%pin | の照度センサの値(0-100) &quot;" line45="    //% pin.fieldEditor=&quot;gridpicker&quot; pin.fieldOptions.columns=4" line46="    //% pin.fieldOptions.tooltips=&quot;false&quot; pin.fieldOptions.width=&quot;250&quot;" line47="    //% group=&quot;照度センサ&quot; pin.defl=AnalogPin.P0" line48="    export function Brightness(pin: AnalogPin): number {" line49="        return (pins.analogReadPin(pin)/1023)*100" line50="    }" line51="" line52="    /**" line53="     * 角度センサ" line54="     */" line55="    //% blockId=Angle block=&quot;%pin | の角度センサの値(0-100) &quot;" line56="    //% pin.fieldEditor=&quot;gridpicker&quot; pin.fieldOptions.columns=4" line57="    //% pin.fieldOptions.tooltips=&quot;false&quot; pin.fieldOptions.width=&quot;250&quot;" line58="    //% group=&quot;角度センサ&quot; pin.defl=AnalogPin.P0" line59="    export function Angle(pin: AnalogPin): number {" line60="        return (pins.analogReadPin(pin) / 1023) * 100" line61="    }" line62="" line63="    /**" line64="     * 測距センサ" line65="     */" line66="    //% blockId=Distance block=&quot;%pin | の角度センサの値(0-100) &quot;" line67="    //% pin.fieldEditor=&quot;gridpicker&quot; pin.fieldOptions.columns=4" line68="    //% pin.fieldOptions.tooltips=&quot;false&quot; pin.fieldOptions.width=&quot;250&quot;" line69="    //% group=&quot;測距センサ&quot; pin.defl=AnalogPin.P0" line70="    export function Distance(pin: AnalogPin): number {" line71="        return (pins.analogReadPin(pin) / 1023) * 100" line72="    }" line73="" line74="    /**" line75="     * 圧力センサ" line76="     */" line77="    //% blockId=Pressure block=&quot;%pin | の圧力センサの値(0-100) &quot;" line78="    //% pin.fieldEditor=&quot;gridpicker&quot; pin.fieldOptions.columns=4" line79="    //% pin.fieldOptions.tooltips=&quot;false&quot; pin.fieldOptions.width=&quot;250&quot;" line80="    //% group=&quot;圧力センサ&quot; pin.defl=AnalogPin.P0" line81="    export function Pressure(pin: AnalogPin): number {" line82="        return (pins.analogReadPin(pin) / 1023) * 100" line83="    }" line84="" line85="    /**" line86="     * 超音波センサ" line87="     */" line88="    let distanceBackup: number = 0;" line89="    //% blockId=Ultrasonic block=&quot;%pin | の超音波センサ（cm）の値 &quot;" line90="    //% pin.fieldEditor=&quot;gridpicker&quot; pin.fieldOptions.columns=4" line91="    //% pin.fieldOptions.tooltips=&quot;false&quot; pin.fieldOptions.width=&quot;250&quot;" line92="    //% group=&quot;超音波センサ&quot; pin.defl=DigitalPin.P0" line93="    export function ultrasonicSensor(pin: DigitalPin): number {" line94="        let duration = 0;" line95="        let RangeInCentimeters = 0;" line96="" line97="        pins.digitalWritePin(pin, 0);" line98="        control.waitMicros(2);" line99="        pins.digitalWritePin(pin, 1);" line100="        control.waitMicros(20);" line101="        pins.digitalWritePin(pin, 0);" line102="        duration = pins.pulseIn(pin, PulseValue.High, 50000); // Max duration 50 ms" line103="        RangeInCentimeters = duration * 153 / 44 / 2 / 100;" line104="        if (RangeInCentimeters &gt; 0) distanceBackup = RangeInCentimeters;" line105="        else RangeInCentimeters = distanceBackup;" line106="        basic.pause(50);" line107="        return RangeInCentimeters;" line108="    }" line109="}" numlines="110"></mutation></block></statement></block></xml>